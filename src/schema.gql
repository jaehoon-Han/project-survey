# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type CategoryScore {
  id: Int!
  score: Int!
  message: String!
  category: Category!
}

type QuestionOption {
  id: Int!
  content: String!
  score: Int!
  question: Question!
}

type Question {
  id: Int!
  content: String!
  survey: Survey!
  questionOption: [QuestionOption!]!
  questionCategory: [QuestionCategory!]!
}

type QuestionCategory {
  id: Int!
  categoryName: String!
  question: Question!
  category: Category!
}

type Category {
  id: Int!
  categoryName: String!
  categoryScore: [CategoryScore!]
  questionCategory: [QuestionCategory!]
  survey: Survey!
}

type User {
  id: Int!
  name: String!
  surveyResponse: [SurveyResponse!]!
}

type Answer {
  id: Int!
  question: String!
  questionOption: String!
  score: Int!
  surveyResponse: SurveyResponse!
}

type ResponseCategory {
  id: Int!
  categoryName: String!
  totalScore: Int!
  message: String!
  surveyResponse: SurveyResponse!
}

type SurveyResponse {
  id: Int!
  totalScore: Int!
  amountAnswer: Int!
  amountQuestion: Int!
  isComplete: Boolean!
  survey: Survey!
  user: User!
  answer: [Answer!]!
  responseCategory: [ResponseCategory!]!
}

type Survey {
  id: Int!
  title: String!
  description: String!
  amountQuestion: Int!
  question: [Question!]
  surveyResponse: [SurveyResponse!]
  category: [Category!]
}

type Query {
  findAllUser: [User!]!
  getUserWithResponse(id: Int!): [User!]!
  findOneUser(id: Int!): User!
  findAllSurveyResponse: [SurveyResponse!]!
  findSurveyResponse(id: Int!): SurveyResponse!
  findDetail(id: Int!): [Question!]!
  findComplete: [SurveyResponse!]!
  findAllAnswer: [Answer!]!
  findOneAnswer(id: Int!): Answer!
  testFindQuestionCategory(id: Int!): [Category!]!
  findAllResponseCategory: [ResponseCategory!]!
  findOneResponseCategory(id: Int!): ResponseCategory!
  findCategoryScoreWithCategory(categoryId: Int!): ResponseCategory!
  findAllSurvey: [Survey!]!
  findOneSurvey(id: Int!): Survey!
  findDetailSurvey(id: Int!): [Survey!]!
  findAllQuestion: [Question!]!
  findOneQuestion(id: Int!): Question!
  findOneCategoryOfQuestion(questionId: Int!): [Question!]!
  findAllCategoryOfQuestion(surveyId: Int!): [Question!]!
  findAllQuestionOption: [QuestionOption!]!
  findOneQuestionOption(id: Int!): QuestionOption!
  findAllQuestionCategory: [QuestionCategory!]!
  findOneQuestionCategory(id: Float!): QuestionCategory!
  findAllCategory: [Category!]!
  findOneCategory(id: Int!): Category!
  findScoreOfCategory(id: Int!): Category!
  findQuestionOfCategory(id: Int!): [Category!]!
  findCategoryOfSurvey(surveyId: Int!): [Category!]!
  findAllCategoryScore: [CategoryScore!]!
  findOneCategoryScore(id: Int!): CategoryScore!
}

type Mutation {
  createUser(input: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: Int!): User!
  createSurveyResponse(input: CreateSurveyResponseInput!): SurveyResponse!
  updateSurveyResponse(updateSurveyResponseInput: UpdateSurveyResponseInput!): SurveyResponse!
  updateCount(id: Int!): SurveyResponse!
  removeSurveyResponse(id: Int!): SurveyResponse!
  createAnswer(createAnswerInput: CreateAnswerInput!, questionOptionId: Float!): Answer!
  updateAnswer(updateAnswerInput: UpdateAnswerInput!): Answer!
  removeAnswer(id: Int!): Answer!
  createResponseCategory(input: CreateResponseCategoryInput!): ResponseCategory!
  updateResponseCategory(input: UpdateResponseCategoryInput!): ResponseCategory!
  removeResponseCategory(id: Int!): ResponseCategory!
  createSurvey(input: CreateSurveyInput!): Survey!
  updateSurvey(updateSurveyInput: UpdateSurveyInput!): Survey!
  removeSurvey(id: Int!): Survey!
  createQuestion(createQuestionInput: CreateQuestionInput!): Question!
  updateQuestion(updateQuestionInput: UpdateQuestionInput!): Question!
  removeQuestion(id: Int!): Question!
  duplicateQuestion(id: Int!): Question!
  createQuestionOption(createQuestionOptionInput: CreateQuestionOptionInput!): QuestionOption!
  updateQuestionOption(updateQuestionOptionInput: UpdateQuestionOptionInput!): QuestionOption!
  removeQuestionOption(id: Int!): QuestionOption!
  createQuestionCategory(input: CreateQuestionCategoryInput!): QuestionCategory!
  updateQuestioncategory(input: UpdateQuestionCategoryInput!): QuestionCategory!
  removeQuestionCategory(id: Int!): QuestionCategory!
  createCategory(createCategoryInput: CreateCategoryInput!): Category!
  updateCategory(input: UpdateCategoryInput!): Category!
  removeCategory(id: Int!): Category!
  createCategoryScore(input: CreateCategoryScoreInput!): CategoryScore!
  updateCategoryScore(input: UpdateCategoryScoreInput!): CategoryScore!
  removeCategoryScore(id: Float!): CategoryScore!
}

input CreateUserInput {
  name: String!
}

input UpdateUserInput {
  name: String
  id: Int!
}

input CreateSurveyResponseInput {
  surveyId: Int!
  userId: Int!
  totalScore: Int!
}

input UpdateSurveyResponseInput {
  surveyId: Int
  userId: Int
  totalScore: Int
  id: Int!
}

input CreateAnswerInput {
  surveyResponseId: Int!
}

input UpdateAnswerInput {
  surveyResponseId: Int
  id: Int!
}

input CreateResponseCategoryInput {
  surveyResponseId: Int!
  surveyId: Int!
}

input UpdateResponseCategoryInput {
  id: Int!
}

input CreateSurveyInput {
  title: String!
  description: String!
}

input UpdateSurveyInput {
  title: String
  description: String
  id: Int!
}

input CreateQuestionInput {
  surveyId: Int!
  content: String!
}

input UpdateQuestionInput {
  surveyId: Int
  content: String
  id: Int!
}

input CreateQuestionOptionInput {
  questionId: Int!
  score: Int!
  content: String!
}

input UpdateQuestionOptionInput {
  questionId: Int
  score: Int
  content: String
  id: Int!
}

input CreateQuestionCategoryInput {
  categoryId: Int!
  questionId: Int!
}

input UpdateQuestionCategoryInput {
  id: Int!
  categoryId: Int!
  questionId: Int!
}

input CreateCategoryInput {
  categoryName: String!
  surveyId: Int!
}

input UpdateCategoryInput {
  id: Float!
}

input CreateCategoryScoreInput {
  categoryId: Int!
  minScore: Int!
  maxScore: Int!
  message: String!
}

input UpdateCategoryScoreInput {
  id: Float!
}